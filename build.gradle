buildscript {
    ext.kotlin_version = '1.2.61'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

test {
    useJUnitPlatform()
}

repositories {
	mavenCentral()
    jcenter()
}

def logback_version = '1.2.3'
def jupiter_version = '5.2.0'

// TODO what's the difference between testCompile and testImplementation?
dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "ch.qos.logback:logback-core:$logback_version"

    testCompile 'org.amshove.kluent:kluent:1.41'
    testCompile 'org.junit.platform:junit-platform-runner:1.2.0'
    testCompile "org.junit.vintage:junit-vintage-engine:$jupiter_version" // FIXME move the original tests over to JUnit 5
    testCompile "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$jupiter_version" // TODO what is testRuntimeOnly for?
}

// from https://github.com/junit-team/junit5-samples/blob/r5.2.0/junit5-jupiter-starter-gradle/build.gradle
test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}

description = 'A Kotlin project for solving Project Euler problems'
version = 0.5
